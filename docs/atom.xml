<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>bernhard&#x27;s little universe</title>
    <link href="https://bernh.net/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://bernh.net"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-02-13T00:00:00+00:00</updated>
    <id>https://bernh.net/atom.xml</id>
    <entry xml:lang="en">
        <title>De-Google - Step 1: email</title>
        <published>2024-02-13T00:00:00+00:00</published>
        <updated>2024-02-13T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://bernh.net/blog/degoogle-email/" type="text/html"/>
        <id>https://bernh.net/blog/degoogle-email/</id>
        
        <content type="html">&lt;p&gt;I was pretty exited when I managed to get my gmail adress back in November 2004.
At this point of time invitations (yes, gmail was invite only for a couple of 
months) have been highly desired. I switched from an &lt;a href=&quot;https:&#x2F;&#x2F;www.gmx.com&quot;&gt;GMX&lt;&#x2F;a&gt; 
account with something like 10 or maybe 50 MBs of mailbox size and the 1 GB 
offering from google was just amazing. &lt;&#x2F;p&gt;
&lt;p&gt;After having the same email adress for almost 20 years I don&#x27;t really see an
option to completely move on. I could of course automatically forward everything
to a new adress but so far I decided on a differnt approach:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;create new @bernh.net mailboxes
&lt;ul&gt;
&lt;li&gt;one for official stuff connected to banking and government services&lt;&#x2F;li&gt;
&lt;li&gt;one new main account for personal emails&lt;&#x2F;li&gt;
&lt;li&gt;one for &amp;quot;important&amp;quot; and accounts. &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;keep the rest on gmail for now and only gradually move stuff over if I somehow 
consider it relevant.
&lt;ul&gt;
&lt;li&gt;gmail will be kept forever at very least for throw-away accounts&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Not 100% satisfied here but practicality beats purity here.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>De-Google my life</title>
        <published>2024-02-02T00:00:00+00:00</published>
        <updated>2024-02-02T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://bernh.net/blog/degoogle-kick-off/" type="text/html"/>
        <id>https://bernh.net/blog/degoogle-kick-off/</id>
        
        <content type="html">&lt;p&gt;Is it too late to set New Year&#x27;s resolutions? I don&#x27;t believe so! My new goal for
2024 is to #DeGoogle my life. I&#x27;ve replaced Twitter with Mastodon and have ceased 
using Reddit in 2023, so this sounds like a logical continuation.&lt;&#x2F;p&gt;
&lt;p&gt;My 18-year-old self would be proud of me. Back in 1999, I abandoned Microsoft and 
Windows simply out of principle;-) I may not be as hardcore anymore and will make 
some exceptions at the end, but let&#x27;s see where this journey takes me...&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Rewrite this site - yet another time</title>
        <published>2024-01-05T00:00:00+00:00</published>
        <updated>2024-01-05T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://bernh.net/blog/rewrite/" type="text/html"/>
        <id>https://bernh.net/blog/rewrite/</id>
        
        <content type="html">&lt;p&gt;Yet another time that I rewrote this page basically from scratch. Basic motivation
this time is the idea to start a semi-regular blog. Chances that this will really 
happen are slim but you never know. At least I have a couple of things in mind that
may be interesting topics.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Old habbits - good habbits?</title>
        <published>2023-11-20T00:00:00+00:00</published>
        <updated>2023-11-20T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://bernh.net/drafts/habbits/" type="text/html"/>
        <id>https://bernh.net/drafts/habbits/</id>
        
        <content type="html">&lt;p&gt;While learning multiple programming languages in the past, C was the first language
that I used professionally. While reading chapter 1.1 I noticed a personal habbit 
that originates from these times. Or should I say from the deficencies of this language?
C differentiates between declaration and definition and requires declaration before usage. 
Without going into the details what this exactly means, it bascially boils down to this 
typical structure:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;C&quot; style=&quot;background-color:#fafafa;color:#80cbc4;&quot; class=&quot;language-C &quot;&gt;&lt;code class=&quot;language-C&quot; data-lang=&quot;C&quot;&gt;&lt;span style=&quot;font-style:italic;color:#7c4dff;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6182b8;&quot;&gt;helper_function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#39adb5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#7c4dff;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f76d47;&quot;&gt;param&lt;&#x2F;span&gt;&lt;span style=&quot;color:#39adb5;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#ccd7da;&quot;&gt;&#x2F;&#x2F; ... do something and return
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#39adb5;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#7c4dff;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6182b8;&quot;&gt;main &lt;&#x2F;span&gt;&lt;span style=&quot;color:#39adb5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#7c4dff;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f76d47;&quot;&gt;argc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#39adb5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#7c4dff;&quot;&gt;char &lt;&#x2F;span&gt;&lt;span style=&quot;color:#39adb5;&quot;&gt;**&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f76d47;&quot;&gt;argv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#39adb5;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#ccd7da;&quot;&gt;&#x2F;&#x2F; ... whatever
&lt;&#x2F;span&gt;&lt;span&gt;  x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#39adb5;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6182b8;&quot;&gt;helper_function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#39adb5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6182b8;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#39adb5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#ccd7da;&quot;&gt;&#x2F;&#x2F; ... continue
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#39adb5;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;helper_function&lt;&#x2F;code&gt; needs to be &lt;em&gt;above&lt;&#x2F;em&gt; the &lt;code&gt;main&lt;&#x2F;code&gt; function otherwise the 
compiler will complain. (&lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;: Yes, I know, technically only the declaration needs to be above
but this is the way I ended up writing 99% of my C code.) Whenever a new function needs to
be introduced, go up and insert above. &lt;&#x2F;p&gt;
&lt;p&gt;And I realized that I&#x27;m doing this also in my Python (&lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#2&quot;&gt;2&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;: In Python there is of course this 
weird &lt;code&gt;if __name__ == &amp;quot;__main__&amp;quot;&lt;&#x2F;code&gt; thing but I always call &lt;code&gt;main()&lt;&#x2F;code&gt; there and this function can be on the top) and Rust code while it&#x27;s not necessary
there. This observation sent me down a rabbit hole of stack overflow questions and tons of
advice for different programming languages. Anyway, I have made a decision: I will write code
top-to-bottom in the future.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
